{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"G:\\\\New folder\\\\projects\\\\next-project\\\\tvshow\\\\components\\\\Header\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nvar countries = [{\n  label: 'us',\n  name: 'United States'\n}, {\n  label: 'in',\n  name: 'India'\n}, {\n  label: 'br',\n  name: 'Brazil'\n}];\n\nvar Header = function Header() {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState(router.query.country),\n      selectedCountry = _useState[0],\n      setSelectedCountry = _useState[1];\n\n  var onChange = function onChange(event) {\n    event.persist();\n    selectedCountry(event.target.value);\n  };\n\n  var renderOptions = function renderOptions() {\n    return countries.map(function (country) {\n      return __jsx(\"option\", {\n        className: \"country_option\",\n        key: country.label,\n        value: country.label,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 20\n        }\n      }, country.name);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-380835917\" + \" \" + \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"select\", {\n    value: selectedCountry,\n    onChange: onChange,\n    className: \"jsx-380835917\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, renderOptions()), __jsx(_JSXStyle, {\n    id: \"380835917\",\n    __self: _this\n  }, \".header.jsx-380835917{padding:10px;background-color:#333;color:#fff;text-align:center;margin-bottom:7px;}.header.jsx-380835917>country_option{width:60px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkc6XFxOZXcgZm9sZGVyXFxwcm9qZWN0c1xcbmV4dC1wcm9qZWN0XFx0dnNob3dcXGNvbXBvbmVudHNcXEhlYWRlclxcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0M0QixBQUdzQyxBQVFGLFdBQ2YsRUFSMEIsc0JBQ1gsV0FDTyxrQkFDQSxrQkFDdEIiLCJmaWxlIjoiRzpcXE5ldyBmb2xkZXJcXHByb2plY3RzXFxuZXh0LXByb2plY3RcXHR2c2hvd1xcY29tcG9uZW50c1xcSGVhZGVyXFxpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge0NvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHt1c2VSb3V0ZXJ9IGZyb20gJ25leHQvcm91dGVyJztcclxuaW1wb3J0IHt1c2VTdGF0ZX0gZnJvbSAncmVhY3QnO1xyXG5cclxuIGNvbnN0IGNvdW50cmllcyA9IFt7XHJcbiAgICBsYWJlbDogJ3VzJyxcclxuICAgIG5hbWU6ICdVbml0ZWQgU3RhdGVzJ1xyXG4gICAgfSx7XHJcbiAgICAgICAgbGFiZWw6ICdpbicsXHJcbiAgICAgICAgbmFtZTogJ0luZGlhJ1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICBsYWJlbDogJ2JyJyxcclxuICAgICAgICBuYW1lOiAnQnJhemlsJ1xyXG4gICAgfVxyXG5dO1xyXG5cclxuXHJcbmNvbnN0IEhlYWRlciA9ICgpID0+IHtcclxuXHJcbiAgICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcclxuICAgIGNvbnN0IFtzZWxlY3RlZENvdW50cnksIHNldFNlbGVjdGVkQ291bnRyeV0gPSB1c2VTdGF0ZShyb3V0ZXIucXVlcnkuY291bnRyeSk7ICAgIFxyXG4gICAgY29uc3Qgb25DaGFuZ2UgPSAoZXZlbnQpID0+e1xyXG4gICAgICAgIGV2ZW50LnBlcnNpc3QoKTtcclxuICAgICAgICBzZWxlY3RlZENvdW50cnkoZXZlbnQudGFyZ2V0LnZhbHVlKTtcclxuICAgIH07XHJcbiAgICBjb25zdCByZW5kZXJPcHRpb25zID0gKCkgPT57XHJcbiAgICAgICAgcmV0dXJuIGNvdW50cmllcy5tYXAoY291bnRyeSA9PntcclxuICAgICAgICAgICAgcmV0dXJuIDxvcHRpb24gY2xhc3NOYW1lPVwiY291bnRyeV9vcHRpb25cIiBrZXk9e2NvdW50cnkubGFiZWx9IHZhbHVlPXtjb3VudHJ5LmxhYmVsfT57Y291bnRyeS5uYW1lfTwvb3B0aW9uPlxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4oXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGVyXCI+XHJcbiAgICAgICAgICAgICAgICA8c2VsZWN0IHZhbHVlPXtzZWxlY3RlZENvdW50cnl9IG9uQ2hhbmdlPXtvbkNoYW5nZX0+XHJcbiAgICAgICAgICAgICAgICAgICAge3JlbmRlck9wdGlvbnMoKX1cclxuICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgICAgICAgICAuaGVhZGVye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA3cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAuaGVhZGVyID4gOmdsb2JsZShjb3VudHJ5X29wdGlvbil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA2MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgKTtcclxuICAgIFxyXG59IFxyXG5cclxuZXhwb3J0IGRlZmF1bHQgSGVhZGVyOyJdfQ== */\\n/*@ sourceURL=G:\\\\\\\\New folder\\\\\\\\projects\\\\\\\\next-project\\\\\\\\tvshow\\\\\\\\components\\\\\\\\Header\\\\\\\\index.js */\"));\n};\n\n_s(Header, \"uzmZ4QXikGrX6+DhS2o3W8cY9ec=\", false, function () {\n  return [useRouter];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["G:/New folder/projects/next-project/tvshow/components/Header/index.js"],"names":["React","Component","useRouter","useState","countries","label","name","Header","router","query","country","selectedCountry","setSelectedCountry","onChange","event","persist","target","value","renderOptions","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEC,IAAMC,SAAS,GAAG,CAAC;AAChBC,EAAAA,KAAK,EAAE,IADS;AAEhBC,EAAAA,IAAI,EAAE;AAFU,CAAD,EAGb;AACED,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAHa,EAOf;AACID,EAAAA,KAAK,EAAE,IADX;AAEIC,EAAAA,IAAI,EAAE;AAFV,CAPe,CAAlB;;AAcD,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAEjB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;;AAFiB,kBAG6BC,QAAQ,CAACK,MAAM,CAACC,KAAP,CAAaC,OAAd,CAHrC;AAAA,MAGVC,eAHU;AAAA,MAGOC,kBAHP;;AAIjB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAU;AACvBA,IAAAA,KAAK,CAACC,OAAN;AACAJ,IAAAA,eAAe,CAACG,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAf;AACH,GAHD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAK;AACvB,WAAOd,SAAS,CAACe,GAAV,CAAc,UAAAT,OAAO,EAAG;AAC3B,aAAO;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,GAAG,EAAEA,OAAO,CAACL,KAAhD;AAAuD,QAAA,KAAK,EAAEK,OAAO,CAACL,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8EK,OAAO,CAACJ,IAAtF,CAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAMA,SACQ;AAAA,uCAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAEK,eAAf;AAAgC,IAAA,QAAQ,EAAEE,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,aAAa,EADlB,CADJ;AAAA;AAAA;AAAA,i1FADR;AAuBH,CArCD;;GAAMX,M;UAEaL,S;;;KAFbK,M;AAuCN,eAAeA,MAAf","sourcesContent":["import React, {Component } from 'react';\r\nimport {useRouter} from 'next/router';\r\nimport {useState} from 'react';\r\n\r\n const countries = [{\r\n    label: 'us',\r\n    name: 'United States'\r\n    },{\r\n        label: 'in',\r\n        name: 'India'\r\n    },\r\n    {\r\n        label: 'br',\r\n        name: 'Brazil'\r\n    }\r\n];\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const router = useRouter();\r\n    const [selectedCountry, setSelectedCountry] = useState(router.query.country);    \r\n    const onChange = (event) =>{\r\n        event.persist();\r\n        selectedCountry(event.target.value);\r\n    };\r\n    const renderOptions = () =>{\r\n        return countries.map(country =>{\r\n            return <option className=\"country_option\" key={country.label} value={country.label}>{country.name}</option>\r\n        });\r\n    };\r\n\r\n    return(\r\n            <div className=\"header\">\r\n                <select value={selectedCountry} onChange={onChange}>\r\n                    {renderOptions()}\r\n                </select>\r\n            \r\n                <style jsx>{`\r\n                    .header{\r\n                        padding: 10px;\r\n                        background-color: #333;\r\n                        color: #fff;\r\n                        text-align: center;\r\n                        margin-bottom: 7px;\r\n                    }\r\n\r\n                    .header > :globle(country_option){\r\n                        width: 60px;\r\n                    }\r\n\r\n                `}</style>\r\n            </div>\r\n    );\r\n    \r\n} \r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}