{"ast":null,"code":"var _jsxFileName = \"G:\\\\New folder\\\\projects\\\\next-project\\\\tvshow\\\\components\\\\Header\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { useRouter } from 'next/router';\nconst countries = [{\n  label: 'us',\n  name: 'United States'\n}, {\n  label: 'in',\n  name: 'India'\n}, {\n  label: 'br',\n  name: 'Brazil'\n}];\n\nconst Header = () => {\n  const onChange = event => {\n    event.persist();\n    console.log(event.target.value);\n    console.log(this.props.router);\n  };\n\n  const renderOptions = () => {\n    return countries.map(country => {\n      return __jsx(\"option\", {\n        className: \"country_option\",\n        key: country.label,\n        value: country.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }\n      }, country.name);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-380835917\" + \" \" + \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"select\", {\n    onChange: onChange,\n    className: \"jsx-380835917\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, renderOptions()), __jsx(_JSXStyle, {\n    id: \"380835917\",\n    __self: this\n  }, \".header.jsx-380835917{padding:10px;background-color:#333;color:#fff;text-align:center;margin-bottom:7px;}.header.jsx-380835917>country_option{width:60px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkc6XFxOZXcgZm9sZGVyXFxwcm9qZWN0c1xcbmV4dC1wcm9qZWN0XFx0dnNob3dcXGNvbXBvbmVudHNcXEhlYWRlclxcaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUM0QixBQUdzQyxBQVFGLFdBQ2YsRUFSMEIsc0JBQ1gsV0FDTyxrQkFDQSxrQkFDdEIiLCJmaWxlIjoiRzpcXE5ldyBmb2xkZXJcXHByb2plY3RzXFxuZXh0LXByb2plY3RcXHR2c2hvd1xcY29tcG9uZW50c1xcSGVhZGVyXFxpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge0NvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHt1c2VSb3V0ZXJ9IGZyb20gJ25leHQvcm91dGVyJztcclxuXHJcbiBjb25zdCBjb3VudHJpZXMgPSBbe1xyXG4gICAgbGFiZWw6ICd1cycsXHJcbiAgICBuYW1lOiAnVW5pdGVkIFN0YXRlcydcclxuICAgIH0se1xyXG4gICAgICAgIGxhYmVsOiAnaW4nLFxyXG4gICAgICAgIG5hbWU6ICdJbmRpYSdcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbGFiZWw6ICdicicsXHJcbiAgICAgICAgbmFtZTogJ0JyYXppbCdcclxuICAgIH1cclxuXTtcclxuXHJcblxyXG5jb25zdCBIZWFkZXIgPSAoKSA9PiB7XHJcbiAgICBcclxuICAgIGNvbnN0IG9uQ2hhbmdlID0gKGV2ZW50KSA9PntcclxuICAgICAgICBldmVudC5wZXJzaXN0KCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coZXZlbnQudGFyZ2V0LnZhbHVlKTtcclxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnByb3BzLnJvdXRlcik7XHJcblxyXG4gICAgfTtcclxuICAgIGNvbnN0IHJlbmRlck9wdGlvbnMgPSAoKSA9PntcclxuICAgICAgICByZXR1cm4gY291bnRyaWVzLm1hcChjb3VudHJ5ID0+e1xyXG4gICAgICAgICAgICByZXR1cm4gPG9wdGlvbiBjbGFzc05hbWU9XCJjb3VudHJ5X29wdGlvblwiIGtleT17Y291bnRyeS5sYWJlbH0gdmFsdWU9e2NvdW50cnkubGFiZWx9Pntjb3VudHJ5Lm5hbWV9PC9vcHRpb24+XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybihcclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWFkZXJcIj5cclxuICAgICAgICAgICAgICAgIDxzZWxlY3Qgb25DaGFuZ2U9e29uQ2hhbmdlfT5cclxuICAgICAgICAgICAgICAgICAgICB7cmVuZGVyT3B0aW9ucygpfVxyXG4gICAgICAgICAgICAgICAgPC9zZWxlY3Q+XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgICAgICAgICAgIC5oZWFkZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDdweDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIC5oZWFkZXIgPiA6Z2xvYmxlKGNvdW50cnlfb3B0aW9uKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDYwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG4gICAgXHJcbn0gXHJcblxyXG5leHBvcnQgZGVmYXVsdCBIZWFkZXI7Il19 */\\n/*@ sourceURL=G:\\\\\\\\New folder\\\\\\\\projects\\\\\\\\next-project\\\\\\\\tvshow\\\\\\\\components\\\\\\\\Header\\\\\\\\index.js */\"));\n};\n\nexport default Header;","map":{"version":3,"sources":["G:/New folder/projects/next-project/tvshow/components/Header/index.js"],"names":["React","Component","useRouter","countries","label","name","Header","onChange","event","persist","console","log","target","value","props","router","renderOptions","map","country"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEC,MAAMC,SAAS,GAAG,CAAC;AAChBC,EAAAA,KAAK,EAAE,IADS;AAEhBC,EAAAA,IAAI,EAAE;AAFU,CAAD,EAGb;AACED,EAAAA,KAAK,EAAE,IADT;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAHa,EAOf;AACID,EAAAA,KAAK,EAAE,IADX;AAEIC,EAAAA,IAAI,EAAE;AAFV,CAPe,CAAlB;;AAcD,MAAMC,MAAM,GAAG,MAAM;AAEjB,QAAMC,QAAQ,GAAIC,KAAD,IAAU;AACvBA,IAAAA,KAAK,CAACC,OAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAN,CAAaC,KAAzB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKG,KAAL,CAAWC,MAAvB;AAEH,GALD;;AAMA,QAAMC,aAAa,GAAG,MAAK;AACvB,WAAOb,SAAS,CAACc,GAAV,CAAcC,OAAO,IAAG;AAC3B,aAAO;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,GAAG,EAAEA,OAAO,CAACd,KAAhD;AAAuD,QAAA,KAAK,EAAEc,OAAO,CAACd,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8Ec,OAAO,CAACb,IAAtF,CAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAMA,SACQ;AAAA,uCAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,QAAQ,EAAEE,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,aAAa,EADlB,CADJ;AAAA;AAAA;AAAA,ypFADR;AAuBH,CArCD;;AAuCA,eAAeV,MAAf","sourcesContent":["import React, {Component } from 'react';\r\nimport {useRouter} from 'next/router';\r\n\r\n const countries = [{\r\n    label: 'us',\r\n    name: 'United States'\r\n    },{\r\n        label: 'in',\r\n        name: 'India'\r\n    },\r\n    {\r\n        label: 'br',\r\n        name: 'Brazil'\r\n    }\r\n];\r\n\r\n\r\nconst Header = () => {\r\n    \r\n    const onChange = (event) =>{\r\n        event.persist();\r\n        console.log(event.target.value);\r\n        console.log(this.props.router);\r\n\r\n    };\r\n    const renderOptions = () =>{\r\n        return countries.map(country =>{\r\n            return <option className=\"country_option\" key={country.label} value={country.label}>{country.name}</option>\r\n        });\r\n    };\r\n\r\n    return(\r\n            <div className=\"header\">\r\n                <select onChange={onChange}>\r\n                    {renderOptions()}\r\n                </select>\r\n            \r\n                <style jsx>{`\r\n                    .header{\r\n                        padding: 10px;\r\n                        background-color: #333;\r\n                        color: #fff;\r\n                        text-align: center;\r\n                        margin-bottom: 7px;\r\n                    }\r\n\r\n                    .header > :globle(country_option){\r\n                        width: 60px;\r\n                    }\r\n\r\n                `}</style>\r\n            </div>\r\n    );\r\n    \r\n} \r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}