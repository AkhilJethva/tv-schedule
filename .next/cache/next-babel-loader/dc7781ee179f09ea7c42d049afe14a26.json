{"ast":null,"code":"var _jsxFileName = \"G:\\\\New folder\\\\projects\\\\next-project\\\\tvshow\\\\components\\\\Cast\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Thumbnail from '../Thumbnail';\n\nclass Cast extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderCast\", () => {\n      const {\n        cast\n      } = this.props;\n      return cast.map((castItem, index) => {\n        const {\n          image,\n          name\n        } = castItem.person;\n        return __jsx(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 17\n          }\n        }, __jsx(Thumbnail, {\n          imageUrl: image && image.medium || undefined,\n          caption: name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 21\n          }\n        }));\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"jsx-4228754231\" + \" \" + \"cast\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, __jsx(\"h3\", {\n      className: \"jsx-4228754231\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, \"Cast\"), __jsx(\"ul\", {\n      className: \"jsx-4228754231\" + \" \" + \"cast_list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, this.renderCast()), __jsx(_JSXStyle, {\n      id: \"4228754231\",\n      __self: this\n    }, \".cast_list.jsx-4228754231{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;overflow-x:scroll;grid-template-columns:1fr 1fr 1fr 1fr 1fr 1fr;gap:20px;padding:0;margin:0;background-color:ciyan;list-style-type:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkc6XFxOZXcgZm9sZGVyXFxwcm9qZWN0c1xcbmV4dC1wcm9qZWN0XFx0dnNob3dcXGNvbXBvbmVudHNcXENhc3RcXGluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRCNEIsQUFHc0MsMEVBQ0ssa0JBQzRCLDhDQUNyQyxTQUNDLFVBQ0QsU0FDYyx1QkFDRixxQkFDekIiLCJmaWxlIjoiRzpcXE5ldyBmb2xkZXJcXHByb2plY3RzXFxuZXh0LXByb2plY3RcXHR2c2hvd1xcY29tcG9uZW50c1xcQ2FzdFxcaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFRodW1ibmFpbCBmcm9tICcuLi9UaHVtYm5haWwnO1xyXG5cclxuY2xhc3MgQ2FzdCBleHRlbmRzIENvbXBvbmVudHtcclxuXHJcbiAgICByZW5kZXJDYXN0ID0gKCkgPT57XHJcbiAgICAgICAgY29uc3Qge2Nhc3R9ID0gdGhpcy5wcm9wcztcclxuICAgICAgICByZXR1cm4gY2FzdC5tYXAoKGNhc3RJdGVtLCBpbmRleCk9PntcclxuICAgICAgICAgICAgY29uc3Qge2ltYWdlLCBuYW1lfSA9IGNhc3RJdGVtLnBlcnNvbjtcclxuICAgICAgICAgICAgcmV0dXJuKFxyXG4gICAgICAgICAgICAgICAgPGxpPlxyXG4gICAgICAgICAgICAgICAgICAgIDxUaHVtYm5haWxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBpbWFnZVVybD17KGltYWdlICYmIGltYWdlLm1lZGl1bSkgfHwgdW5kZWZpbmVkfSBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICBjYXB0aW9uPXtuYW1lfVxyXG4gICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH0pXHJcbiAgICB9O1xyXG5cclxuXHJcbiAgICByZW5kZXIoKXtcclxuICAgICAgICByZXR1cm4oXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FzdFwiPlxyXG4gICAgICAgICAgICAgICAgPGgzPkNhc3Q8L2gzPlxyXG4gICAgICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cImNhc3RfbGlzdFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLnJlbmRlckNhc3QoKX1cclxuICAgICAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgICAgICAgICAgLmNhc3RfbGlzdHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3cteDogc2Nyb2xsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyIDFmciAxZnIgMWZyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBnYXA6IDIwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogY2l5YW47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FzdDsiXX0= */\\n/*@ sourceURL=G:\\\\\\\\New folder\\\\\\\\projects\\\\\\\\next-project\\\\\\\\tvshow\\\\\\\\components\\\\\\\\Cast\\\\\\\\index.js */\"));\n  }\n\n}\n\nexport default Cast;","map":{"version":3,"sources":["G:/New folder/projects/next-project/tvshow/components/Cast/index.js"],"names":["React","Component","Thumbnail","Cast","cast","props","map","castItem","index","image","name","person","medium","undefined","render","renderCast"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA4B;AAAA;AAAA;;AAAA,wCAEX,MAAK;AACd,YAAM;AAACG,QAAAA;AAAD,UAAS,KAAKC,KAApB;AACA,aAAOD,IAAI,CAACE,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAmB;AAC/B,cAAM;AAACC,UAAAA,KAAD;AAAQC,UAAAA;AAAR,YAAgBH,QAAQ,CAACI,MAA/B;AACA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,SAAD;AACM,UAAA,QAAQ,EAAGF,KAAK,IAAIA,KAAK,CAACG,MAAhB,IAA2BC,SAD3C;AAEM,UAAA,OAAO,EAAEH,IAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAQH,OAVM,CAAP;AAWH,KAfuB;AAAA;;AAkBxBI,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA,0CAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA,0CAAc,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,UAAL,EADL,CAFJ;AAAA;AAAA;AAAA,opFADJ;AAqBH;;AAxCuB;;AA2C5B,eAAeZ,IAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Thumbnail from '../Thumbnail';\r\n\r\nclass Cast extends Component{\r\n\r\n    renderCast = () =>{\r\n        const {cast} = this.props;\r\n        return cast.map((castItem, index)=>{\r\n            const {image, name} = castItem.person;\r\n            return(\r\n                <li>\r\n                    <Thumbnail\r\n                          imageUrl={(image && image.medium) || undefined} \r\n                          caption={name}\r\n                    />\r\n                </li>\r\n            );\r\n        })\r\n    };\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"cast\">\r\n                <h3>Cast</h3>\r\n                <ul className=\"cast_list\">\r\n                    {this.renderCast()}\r\n                </ul>\r\n                <style jsx>{`\r\n                    .cast_list{\r\n                        display: flex;\r\n                        overflow-x: scroll;\r\n                        grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;\r\n                        gap: 20px;\r\n                        padding: 0;\r\n                        margin: 0;\r\n                        background-color: ciyan;\r\n                        list-style-type: none;\r\n                    }\r\n                `}</style>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cast;"]},"metadata":{},"sourceType":"module"}