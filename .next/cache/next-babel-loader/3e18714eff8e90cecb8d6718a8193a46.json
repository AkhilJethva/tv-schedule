{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"G:\\\\New folder\\\\projects\\\\next-project\\\\tvshow\\\\pages\\\\[country]\\\\[showid].js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport parse from 'html-react-parser';\n\nvar ShowDetails = /*#__PURE__*/function (_Component) {\n  _inherits(ShowDetails, _Component);\n\n  var _super = _createSuper(ShowDetails);\n\n  function ShowDetails() {\n    _classCallCheck(this, ShowDetails);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ShowDetails, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$show = this.props.show,\n          name = _this$props$show.name,\n          summary = _this$props$show.summary;\n      var image = this.props.show.image.original || undefined;\n      return __jsx(\"div\", {\n        className: \"showdetails container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, __jsx(\"img\", {\n        src: image,\n        className: \"showdetails_poster col-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }), __jsx(\"div\", {\n        className: \"col-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, __jsx(\"h1\", {\n        className: \"showdetails_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, name), parse(summary)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var showid, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                showid = props.query.showid;\n                _context.next = 3;\n                return axios.get(\"http://api.tvmaze.com/shows/\".concat(showid, \"?embed=cast\"));\n\n              case 3:\n                res = _context.sent;\n                console.log(res.data);\n                return _context.abrupt(\"return\", {\n                  show: res.data\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return ShowDetails;\n}(Component);\n\nexport default ShowDetails;","map":{"version":3,"sources":["G:/New folder/projects/next-project/tvshow/pages/[country]/[showid].js"],"names":["React","Component","axios","parse","ShowDetails","props","show","name","summary","image","original","undefined","showid","query","get","res","console","log","data"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;IAGMC,W;;;;;;;;;;;;;6BASM;AAAA,6BAEoB,KAAKC,KAAL,CAAWC,IAF/B;AAAA,UAEGC,IAFH,oBAEGA,IAFH;AAAA,UAESC,OAFT,oBAESA,OAFT;AAGJ,UAAMC,KAAK,GAAI,KAAKJ,KAAL,CAAWC,IAAX,CAAgBG,KAAhB,CAAsBC,QAAtB,IAAkCC,SAAjD;AACA,aACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEF,KAAV;AAAiB,QAAA,SAAS,EAAC,0BAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCF,IAAlC,CADJ,EAEMJ,KAAK,CAACK,OAAD,CAFX,CAFJ,CADJ;AAUH;;;;uGArB4BH,K;;;;;;AACnBO,gBAAAA,M,GAASP,KAAK,CAACQ,KAAN,CAAYD,M;;uBACTV,KAAK,CAACY,GAAN,uCAAyCF,MAAzC,iB;;;AAAZG,gBAAAA,G;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;iDACO;AAAEZ,kBAAAA,IAAI,EAAES,GAAG,CAACG;AAAZ,iB;;;;;;;;;;;;;;;;;;;EANWjB,S;;AA0B1B,eAAeG,WAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport parse from 'html-react-parser';\r\n\r\n\r\nclass ShowDetails extends Component{\r\n\r\n    static async getInitialProps(props){\r\n        const showid = props.query.showid; \r\n        const res = await axios.get(`http://api.tvmaze.com/shows/${showid}?embed=cast`);\r\n        console.log(res.data);\r\n        return { show: res.data};\r\n    }\r\n\r\n    render(){\r\n        \r\n        const {name, summary} = this.props.show;\r\n        const image = (this.props.show.image.original || undefined); \r\n        return(\r\n            <div className=\"showdetails container\">\r\n                <img src={image} className=\"showdetails_poster col-4\" ></img>\r\n                <div className=\"col-8\">\r\n                    <h1 className=\"showdetails_name\">{name}</h1>\r\n                    { parse(summary)}\r\n                </div>  \r\n               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowDetails;"]},"metadata":{},"sourceType":"module"}