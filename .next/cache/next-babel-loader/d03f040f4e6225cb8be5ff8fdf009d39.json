{"ast":null,"code":"var _jsxFileName = \"G:\\\\New folder\\\\projects\\\\next-project\\\\tvshow\\\\pages\\\\[country]\\\\index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport Thumbnail from '../../components/Thumbnail';\nimport Header from '../../components/Header';\nimport Error from 'next/error';\n\nclass CountryTest extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderShows\", () => {\n      if (this.props.statusCode) {\n        return __jsx(Error, {\n          statusCode: errorCode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 20\n          }\n        }, \"There is an error\");\n      }\n\n      const shows = this.props.shows;\n      return shows.map((showItem, index) => {\n        const {\n          show\n        } = showItem;\n        return __jsx(\"li\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }\n        }, __jsx(Thumbnail, {\n          imageUrl: show.image && show.image.medium || undefined,\n          caption: show.name,\n          herf: \"/[country]/[showid]\",\n          as: `/${this.props.country}/${show.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }\n        }));\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    try {\n      const country = props.query.country;\n      const response = await axios.get(`http://api.tvmaze.com/schedule?country=${country}&date=2014-12-01`);\n      return {\n        shows: response.data,\n        country: country\n      };\n    } catch (err) {\n      return {\n        statusCode: err.response ? err.response.status : 500\n      };\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, __jsx(\"ul\", {\n      className: \"jsx-3169976070\" + \" \" + \"tvshows-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, this.renderShows(), __jsx(_JSXStyle, {\n      id: \"3169976070\",\n      __self: this\n    }, \".tvshows-grid.jsx-3169976070{display:grid;grid-template-columns:1fr 1fr 1fr 1fr;gap:20px;padding:0;margin:0;background-color:ciyan;list-style-type:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkc6XFxOZXcgZm9sZGVyXFxwcm9qZWN0c1xcbmV4dC1wcm9qZWN0XFx0dnNob3dcXHBhZ2VzXFxbY291bnRyeV1cXGluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFENEIsQUFHc0MsYUFDeUIsc0NBQzdCLFNBQ0MsVUFDRCxTQUNjLHVCQUNGLHFCQUN6QiIsImZpbGUiOiJHOlxcTmV3IGZvbGRlclxccHJvamVjdHNcXG5leHQtcHJvamVjdFxcdHZzaG93XFxwYWdlc1xcW2NvdW50cnldXFxpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge0NvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xyXG5pbXBvcnQgVGh1bWJuYWlsIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVGh1bWJuYWlsJztcclxuaW1wb3J0IEhlYWRlciBmcm9tICcuLi8uLi9jb21wb25lbnRzL0hlYWRlcic7XHJcbmltcG9ydCBFcnJvciBmcm9tICduZXh0L2Vycm9yJztcclxuXHJcblxyXG5cclxuY2xhc3MgQ291bnRyeVRlc3QgZXh0ZW5kcyBDb21wb25lbnR7XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGdldEluaXRpYWxQcm9wcyhwcm9wcyl7XHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICBjb25zdCBjb3VudHJ5ID0gcHJvcHMucXVlcnkuY291bnRyeTtcclxuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYGh0dHA6Ly9hcGkudHZtYXplLmNvbS9zY2hlZHVsZT9jb3VudHJ5PSR7Y291bnRyeX0mZGF0ZT0yMDE0LTEyLTAxYCk7XHJcbiAgICAgICAgICAgIHJldHVybiB7c2hvd3M6IHJlc3BvbnNlLmRhdGEsIGNvdW50cnk6IGNvdW50cnl9O1xyXG4gICAgICAgIH1jYXRjaChlcnIpe1xyXG4gICAgICAgICAgICByZXR1cm4geyBzdGF0dXNDb2RlOiBlcnIucmVzcG9uc2UgPyBlcnIucmVzcG9uc2Uuc3RhdHVzIDogNTAwIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlclNob3dzID0gKCkgPT4ge1xyXG5cclxuICAgICAgICBpZih0aGlzLnByb3BzLnN0YXR1c0NvZGUpe1xyXG4gICAgICAgICAgICByZXR1cm4gPEVycm9yIHN0YXR1c0NvZGU9e2Vycm9yQ29kZX0gPlRoZXJlIGlzIGFuIGVycm9yPC9FcnJvcj47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBzaG93cyA9IHRoaXMucHJvcHMuc2hvd3M7XHJcbiAgICAgICAgcmV0dXJuIHNob3dzLm1hcCgoc2hvd0l0ZW0sIGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IHtzaG93fSA9IHNob3dJdGVtO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgcmV0dXJuKFxyXG4gICAgICAgICAgICAgICAgPGxpIGtleT17aW5kZXh9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxUaHVtYm5haWwgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlVXJsPXsoc2hvdy5pbWFnZSAmJiBzaG93LmltYWdlLm1lZGl1bSkgfHwgdW5kZWZpbmVkfSBcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FwdGlvbj17c2hvdy5uYW1lfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZXJmID0gXCIvW2NvdW50cnldL1tzaG93aWRdXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXMgPSB7YC8ke3RoaXMucHJvcHMuY291bnRyeX0vJHtzaG93LmlkfWB9XHJcbiAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlcigpe1xyXG4gICAgICAgIHJldHVybihcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhvbWVcIj5cclxuICAgICAgICAgICBcclxuICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cInR2c2hvd3MtZ3JpZFwiPlxyXG4gICAgICAgICAgICAgICAge3RoaXMucmVuZGVyU2hvd3MoKX1cclxuXHJcbiAgICAgICAgICAgICAgICA8c3R5bGUganN4PntgXHJcbiAgICAgICAgICAgICAgICAgICAgLnR2c2hvd3MtZ3JpZHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmciAxZnI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGdhcDogMjBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjaXlhbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGB9PC9zdHlsZT5cclxuICAgICAgICAgICAgPC91bD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgQ291bnRyeVRlc3Q7Il19 */\\n/*@ sourceURL=G:\\\\\\\\New folder\\\\\\\\projects\\\\\\\\next-project\\\\\\\\tvshow\\\\\\\\pages\\\\\\\\[country]\\\\\\\\index.js */\")));\n  }\n\n}\n\nexport default CountryTest;","map":{"version":3,"sources":["G:/New folder/projects/next-project/tvshow/pages/[country]/index.js"],"names":["React","Component","useEffect","axios","Thumbnail","Header","Error","CountryTest","props","statusCode","errorCode","shows","map","showItem","index","show","image","medium","undefined","name","country","id","getInitialProps","query","response","get","data","err","status","render","renderShows"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAIA,MAAMC,WAAN,SAA0BN,SAA1B,CAAmC;AAAA;AAAA;;AAAA,yCAajB,MAAM;AAEhB,UAAG,KAAKO,KAAL,CAAWC,UAAd,EAAyB;AACrB,eAAO,MAAC,KAAD;AAAO,UAAA,UAAU,EAAEC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACH;;AAED,YAAMC,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAzB;AACA,aAAOA,KAAK,CAACC,GAAN,CAAU,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAClC,cAAM;AAACC,UAAAA;AAAD,YAASF,QAAf;AAEA,eACI;AAAI,UAAA,GAAG,EAAEC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,SAAD;AACI,UAAA,QAAQ,EAAGC,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACC,KAAL,CAAWC,MAA1B,IAAqCC,SADnD;AAEI,UAAA,OAAO,EAAEH,IAAI,CAACI,IAFlB;AAGI,UAAA,IAAI,EAAG,qBAHX;AAII,UAAA,EAAE,EAAK,IAAG,KAAKX,KAAL,CAAWY,OAAQ,IAAGL,IAAI,CAACM,EAAG,EAJ5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAUH,OAbM,CAAP;AAeH,KAnC8B;AAAA;;AAE/B,eAAaC,eAAb,CAA6Bd,KAA7B,EAAmC;AAC/B,QAAG;AACC,YAAMY,OAAO,GAAGZ,KAAK,CAACe,KAAN,CAAYH,OAA5B;AACA,YAAMI,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAW,0CAAyCL,OAAQ,kBAA5D,CAAvB;AACA,aAAO;AAACT,QAAAA,KAAK,EAAEa,QAAQ,CAACE,IAAjB;AAAuBN,QAAAA,OAAO,EAAEA;AAAhC,OAAP;AACH,KAJD,CAIC,OAAMO,GAAN,EAAU;AACP,aAAO;AAAElB,QAAAA,UAAU,EAAEkB,GAAG,CAACH,QAAJ,GAAeG,GAAG,CAACH,QAAJ,CAAaI,MAA5B,GAAqC;AAAnD,OAAP;AACH;AAEJ;;AA0BDC,EAAAA,MAAM,GAAE;AACJ,WACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA,0CAAc,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,WAAL,EADL;AAAA;AAAA;AAAA,woHAFJ,CADA;AAoBH;;AA1D8B;;AA6DnC,eAAevB,WAAf","sourcesContent":["import React, {Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Thumbnail from '../../components/Thumbnail';\r\nimport Header from '../../components/Header';\r\nimport Error from 'next/error';\r\n\r\n\r\n\r\nclass CountryTest extends Component{\r\n\r\n    static async getInitialProps(props){\r\n        try{\r\n            const country = props.query.country;\r\n            const response = await axios.get(`http://api.tvmaze.com/schedule?country=${country}&date=2014-12-01`);\r\n            return {shows: response.data, country: country};\r\n        }catch(err){\r\n            return { statusCode: err.response ? err.response.status : 500 };\r\n        }\r\n        \r\n    }\r\n\r\n    renderShows = () => {\r\n\r\n        if(this.props.statusCode){\r\n            return <Error statusCode={errorCode} >There is an error</Error>;\r\n        }\r\n\r\n        const shows = this.props.shows;\r\n        return shows.map((showItem, index) => {\r\n            const {show} = showItem;\r\n            \r\n            return(\r\n                <li key={index}>\r\n                    <Thumbnail \r\n                        imageUrl={(show.image && show.image.medium) || undefined} \r\n                        caption={show.name}\r\n                        herf = \"/[country]/[showid]\"\r\n                        as = {`/${this.props.country}/${show.id}`}\r\n                    />\r\n                </li>\r\n            );\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"home\">\r\n           \r\n            <ul className=\"tvshows-grid\">\r\n                {this.renderShows()}\r\n\r\n                <style jsx>{`\r\n                    .tvshows-grid{\r\n                        display: grid;\r\n                        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n                        gap: 20px;\r\n                        padding: 0;\r\n                        margin: 0;\r\n                        background-color: ciyan;\r\n                        list-style-type: none;\r\n                    }\r\n                `}</style>\r\n            </ul>\r\n        </div>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default CountryTest;"]},"metadata":{},"sourceType":"module"}