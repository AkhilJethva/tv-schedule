{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"G:\\\\New folder\\\\projects\\\\next-project\\\\tvshow\\\\pages\\\\[country]\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport Thumbnail from '../../components/Thumbnail';\n\nvar CountryTest = /*#__PURE__*/function (_Component) {\n  _inherits(CountryTest, _Component);\n\n  var _super = _createSuper(CountryTest);\n\n  function CountryTest() {\n    var _this;\n\n    _classCallCheck(this, CountryTest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderShows\", function () {\n      var shows = _this.props.shows;\n      return shows.map(function (show, index) {\n        return __jsx(\"li\", {\n          key: index,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 18\n          }\n        }, show.show.name);\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(CountryTest, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"ul\", {\n        className: \"tvshows\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, this.renderShows());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var country, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                country = props.query.country;\n                _context.next = 3;\n                return axios.get(\"http://api.tvmaze.com/schedule?country=\".concat(country, \"&date=2019-12-01\"));\n\n              case 3:\n                response = _context.sent;\n                return _context.abrupt(\"return\", {\n                  shows: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CountryTest;\n}(Component);\n\nexport default CountryTest;","map":{"version":3,"sources":["G:/New folder/projects/next-project/tvshow/pages/[country]/index.js"],"names":["React","Component","useEffect","axios","Thumbnail","CountryTest","shows","props","map","show","index","name","renderShows","country","query","get","response","data"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;IAGMC,W;;;;;;;;;;;;;;;;kEAQY,YAAM;AAEhB,UAAMC,KAAK,GAAG,MAAKC,KAAL,CAAWD,KAAzB;AACA,aAAOA,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC9B,eACK;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBD,IAAI,CAACA,IAAL,CAAUE,IAA3B,CADL;AAGH,OAJM,CAAP;AAMH,K;;;;;;;6BAEO;AACJ,aACA;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,KAAKC,WAAL,EAAzB,CADA;AAGH;;;;uGArB4BL,K;;;;;;AACnBM,gBAAAA,O,GAAUN,KAAK,CAACO,KAAN,CAAYD,O;;uBACLV,KAAK,CAACY,GAAN,kDAAoDF,OAApD,sB;;;AAAjBG,gBAAAA,Q;iDACC;AAACV,kBAAAA,KAAK,EAAEU,QAAQ,CAACC;AAAjB,iB;;;;;;;;;;;;;;;;;;;EALWhB,S;;AA0B1B,eAAeI,WAAf","sourcesContent":["import React, {Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Thumbnail from '../../components/Thumbnail';\r\n\r\n\r\nclass CountryTest extends Component{\r\n\r\n    static async getInitialProps(props){\r\n        const country = props.query.country;\r\n        const response = await axios.get(`http://api.tvmaze.com/schedule?country=${country}&date=2019-12-01`);\r\n        return {shows: response.data };\r\n    }\r\n\r\n    renderShows = () => {\r\n\r\n        const shows = this.props.shows;\r\n        return shows.map((show, index) => {\r\n            return(\r\n                 <li key={index}>{show.show.name}</li>\r\n            );\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <ul className=\"tvshows\">{this.renderShows()}</ul>\r\n        );\r\n    }\r\n    \r\n}\r\nexport default CountryTest;"]},"metadata":{},"sourceType":"module"}